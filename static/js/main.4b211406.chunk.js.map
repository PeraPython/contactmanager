{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","Link","to","marginRight","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","onSubmit","e","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","Header","branding","href","About","NotFound","Test","title","body","fetch","then","response","json","App","context_Provider","BrowserRouter","basename","process","layout_Header","Switch","Route","exact","path","component","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","src_App_0","document","getElementById","URL","origin","addEventListener","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"kTAGMA,EAAUC,IAAMC,gBAEhBC,EAAU,SAACC,EAAOC,GACpB,OAAOA,EAAOC,MACV,IAAK,iBACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIK,SAAUL,EAAMK,SAASC,OAAO,SAAAC,GAAO,OAAIA,EAAQC,KAAOP,EAAOQ,YAEzE,IAAK,cACD,OAAON,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIK,SAAQ,CAAGJ,EAAOQ,SAAVC,OAAAP,OAAAQ,EAAA,EAAAR,CAAsBH,EAAMK,aAE5C,IAAK,iBACD,OAAAF,OAAAC,EAAA,EAAAD,CAAA,GACOH,EADP,CAEIK,SAAUL,EAAMK,SAASO,IACrB,SAAAL,GAAO,OACHA,EAAQC,KAAOP,EAAOQ,QAAQD,GAC3BD,EAAUN,EAAOQ,QAAWF,MAE/C,QACI,OAAOP,IAINa,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAb,OAAAc,EAAA,EAAAd,CAAAe,KAAAL,GAAA,QAAAM,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAb,OAAAsB,EAAA,EAAAtB,CAAAe,MAAAH,EAAAZ,OAAAuB,EAAA,EAAAvB,CAAAU,IAAAc,KAAAC,MAAAb,EAAA,CAAAG,MAAAR,OAAAY,MACItB,MAAO,CACHK,SAAS,GACTwB,SAAU,SAAA5B,GAAM,OAAIe,EAAKc,SAAS,SAAA9B,GAAK,OAAID,EAAQC,EAAOC,OAHlEe,EAAA,OAAAb,OAAA4B,EAAA,EAAA5B,CAAAU,EAAAC,GAAAX,OAAA6B,EAAA,EAAA7B,CAAAU,EAAA,EAAAoB,IAAA,oBAAAC,MAAA,eAAAC,EAAAhC,OAAAiC,EAAA,EAAAjC,CAAAkC,EAAAC,EAAAC,KAAA,SAAAC,IAAA,IAAAC,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAO0BC,IAAMC,IAAI,8CAPpC,OAOcN,EAPdE,EAAAK,KASQ9B,KAAKY,SAAS,CAACzB,SAAUoC,EAAIQ,OATrC,wBAAAN,EAAAO,SAAAV,EAAAtB,SAAA,yBAAAiB,EAAAP,MAAAV,KAAAE,YAAA,KAAAa,IAAA,SAAAC,MAAA,WAaQ,OACIiB,EAAAb,EAAAc,cAACxD,EAAQiB,SAAT,CAAkBqB,MAAOhB,KAAKlB,OAC7BkB,KAAKmC,MAAMC,cAfxBzC,EAAA,CAA8B0C,aAqBjBC,EAAW5D,EAAQ4D,iBCmBjBC,6MA/DXzD,MAAQ,CACJ0D,iBAAiB,KAGrBC,oDAAgB,SAAAnB,EAAOhC,EAAIqB,GAAX,OAAAQ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEPC,IAAMc,OAAN,8CAAAlD,OAA2DF,IAFpD,OAGbqB,EAAS,CAAC3B,KAAM,iBAAkBO,QAASD,IAH9BmC,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAD,EAAAkB,GAAAlB,EAAA,SAKZd,EAAS,CAAC3B,KAAM,iBAAkBO,QAASD,IAL/B,wBAAAmC,EAAAO,SAAAV,EAAAtB,KAAA,4IASR,IAAA4C,EAAA5C,KAAA6C,EAC+B7C,KAAKmC,MAAM9C,QAAtCC,EADJuD,EACIvD,GAAIwD,EADRD,EACQC,KAAMC,EADdF,EACcE,MAAOC,EADrBH,EACqBG,MACjBR,EAAmBxC,KAAKlB,MAAxB0D,gBAER,OACIP,EAAAb,EAAAc,cAACI,EAAD,KACK,SAAAtB,GAAS,IACEL,EAAaK,EAAbL,SACR,OACIsB,EAAAb,EAAAc,cAAA,OAAKe,UAAU,uBACXhB,EAAAb,EAAAc,cAAA,UAAKY,EAAL,IAAWb,EAAAb,EAAAc,cAAA,KACCgB,QAAS,kBAAMN,EAAKhC,SAAS,CAAE4B,iBAAkBI,EAAK9D,MAAM0D,mBAC5DS,UAAU,mBACVE,MAAO,CAAEC,OAAQ,aAEjBnB,EAAAb,EAAAc,cAAA,KAAGe,UAAU,eACbE,MAAO,CAACC,OAAQ,UAAWC,MAAO,QAClCC,MAAO,OACPJ,QAASN,EAAKH,cAAcc,KAAKX,EAAMtD,EAAIqB,KAC3CsB,EAAAb,EAAAc,cAACsB,EAAA,EAAD,CAAMC,GAAE,gBAAAjE,OAAkBF,IAC1B2C,EAAAb,EAAAc,cAAA,KACIe,UAAU,oBACVE,MAAO,CACHC,OAAQ,UACRC,MAAO,QACPC,MAAO,QACPI,YAAa,YAMhClB,EAAmBP,EAAAb,EAAAc,cAAA,MAAIe,UAAU,cAC9BhB,EAAAb,EAAAc,cAAA,MAAIe,UAAU,mBAAd,UAAwCF,GACxCd,EAAAb,EAAAc,cAAA,MAAIe,UAAU,mBAAd,UAAwCD,IACnC,eAjDfX,aCwBPsB,mLAvBP,OACI1B,EAAAb,EAAAc,cAACI,EAAD,KACC,SAAAtB,GAAS,IACC7B,EAAY6B,EAAZ7B,SACP,OACI8C,EAAAb,EAAAc,cAACD,EAAAb,EAAMwC,SAAP,KACI3B,EAAAb,EAAAc,cAAA,MAAIe,UAAU,kBACVhB,EAAAb,EAAAc,cAAA,QAAMe,UAAU,eAAhB,YADJ,QAGC9D,EAASO,IAAI,SAAAL,GAAO,OACzB4C,EAAAb,EAAAc,cAAC2B,EAAD,CACI9C,IAAK1B,EAAQC,GACbD,QAASA,gBAfVgD,sCCAjByB,EAAiB,SAAAC,GAQjB,IAPFC,EAOED,EAPFC,MACAlB,EAMEiB,EANFjB,KACA9B,EAKE+C,EALF/C,MACAiD,EAIEF,EAJFE,YACAjF,EAGE+E,EAHF/E,KACAkF,EAEEH,EAFFG,SACAC,EACEJ,EADFI,MAEA,OACAlC,EAAAb,EAAAc,cAAA,OAAKe,UAAU,cACXhB,EAAAb,EAAAc,cAAA,SAAOkC,QAAStB,GAAOkB,GACvB/B,EAAAb,EAAAc,cAAA,SACIlD,KAAMA,EACN8D,KAAMA,EACNG,UAAWoB,IAAW,+BAAgC,CAAEC,aAAcH,IACtEF,YAAaA,EACbjD,MAAOA,EACPkD,SAAUA,IAETC,GAASlC,EAAAb,EAAAc,cAAA,OAAKe,UAAU,oBAAoBkB,KAezDL,EAAeS,aAAe,CAC1BvF,KAAM,QAGK8E,QC6DAU,6MAlGX1F,MAAQ,CACJgE,KAAM,GACNC,MAAO,GACPC,MAAO,GACPyB,OAAQ,MAGZC,+CAAW,SAAApD,EAAOX,EAAUgE,GAAjB,IAAAC,EAAA9B,EAAAC,EAAAC,EAAA6B,EAAAtD,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACPgD,EAAEG,iBADKF,EAEwB9E,EAAKhB,MAA5BgE,EAFD8B,EAEC9B,KAAMC,EAFP6B,EAEO7B,MAAOC,EAFd4B,EAEc5B,MACT,KAATF,EAHI,CAAArB,EAAAE,KAAA,eAIH7B,EAAKc,SAAS,CAAC6D,OAAQ,CAAE3B,KAAM,sBAJ5BrB,EAAAsD,OAAA,oBASM,KAAVhC,EATI,CAAAtB,EAAAE,KAAA,eAUH7B,EAAKc,SAAS,CAAC6D,OAAQ,CAAE1B,MAAO,wBAV7BtB,EAAAsD,OAAA,oBAeM,KAAV/B,EAfI,CAAAvB,EAAAE,KAAA,gBAgBH7B,EAAKc,SAAS,CAAC6D,OAAQ,CAAEzB,MAAO,uBAhB7BvB,EAAAsD,OAAA,yBAoBDF,EAAa,CACf/B,OACAC,QACAC,SAvBGvB,EAAAE,KAAA,GA0BWC,IAAMoD,KAAN,6CAAyDH,GA1BpE,QA0BDtD,EA1BCE,EAAAK,KA4BPnB,EAAS,CAAC3B,KAAM,cAAeO,QAASgC,EAAIQ,OAG5CjC,EAAKc,SAAS,CACVkC,KAAM,GACNC,MAAO,GACPC,MAAO,GACPyB,OAAQ,KAGZ3E,EAAKqC,MAAM8C,QAAQC,KAAK,KAtCjB,yBAAAzD,EAAAO,SAAAV,EAAAtB,mEAyCXkE,SAAW,SAACS,GAAD,OAAO7E,EAAKc,SAAL3B,OAAAkG,EAAA,EAAAlG,CAAA,GAAiB0F,EAAES,OAAOtC,KAAO6B,EAAES,OAAOpE,iFAEnD,IAAA4B,EAAA5C,KAAAqF,EACkCrF,KAAKlB,MAApCgE,EADHuC,EACGvC,KAAMC,EADTsC,EACStC,MAAOC,EADhBqC,EACgBrC,MAAOyB,EADvBY,EACuBZ,OAE5B,OACIxC,EAAAb,EAAAc,cAACI,EAAD,KACK,SAAAtB,GAAS,IACEL,EAAaK,EAAbL,SACR,OACIsB,EAAAb,EAAAc,cAAA,OAAKe,UAAU,aACXhB,EAAAb,EAAAc,cAAA,OAAKe,UAAU,eAAf,eACAhB,EAAAb,EAAAc,cAAA,OAAKe,UAAU,aACXhB,EAAAb,EAAAc,cAAA,QAAMwC,SAAU9B,EAAK8B,SAASnB,KAAKX,EAAMjC,IACrCsB,EAAAb,EAAAc,cAACoD,EAAD,CACItB,MAAM,OACNlB,KAAK,OACLmB,YAAY,aACZjD,MAAO8B,EACPoB,SAAUtB,EAAKsB,SACfC,MAAOM,EAAO3B,OAElBb,EAAAb,EAAAc,cAACoD,EAAD,CACItB,MAAM,QACNlB,KAAK,QACL9D,KAAK,QACLiF,YAAY,oBACZjD,MAAO+B,EACPmB,SAAUtB,EAAKsB,SACfC,MAAOM,EAAO1B,QAElBd,EAAAb,EAAAc,cAACoD,EAAD,CACItB,MAAM,QACNlB,KAAK,QACLmB,YAAY,cACZjD,MAAOgC,EACPkB,SAAUtB,EAAKsB,SACfC,MAAOM,EAAOzB,QAElBf,EAAAb,EAAAc,cAAA,SAAOlD,KAAK,SAASgC,MAAM,cAAciC,UAAU,wCAxF9DZ,aCgHVkD,6MA/GXzG,MAAQ,CACJgE,KAAM,GACNC,MAAO,GACPC,MAAO,GACPyB,OAAQ,MAeZC,+CAAW,SAAApD,EAAOX,EAAUgE,GAAjB,IAAAC,EAAA9B,EAAAC,EAAAC,EAAAwC,EAAAlG,EAAAiC,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACPgD,EAAEG,iBADKF,EAEwB9E,EAAKhB,MAA5BgE,EAFD8B,EAEC9B,KAAMC,EAFP6B,EAEO7B,MAAOC,EAFd4B,EAEc5B,MACT,KAATF,EAHI,CAAArB,EAAAE,KAAA,eAIH7B,EAAKc,SAAS,CAAC6D,OAAQ,CAAE3B,KAAM,sBAJ5BrB,EAAAsD,OAAA,oBASM,KAAVhC,EATI,CAAAtB,EAAAE,KAAA,eAUH7B,EAAKc,SAAS,CAAC6D,OAAQ,CAAE1B,MAAO,wBAV7BtB,EAAAsD,OAAA,oBAeM,KAAV/B,EAfI,CAAAvB,EAAAE,KAAA,gBAgBH7B,EAAKc,SAAS,CAAC6D,OAAQ,CAAEzB,MAAO,uBAhB7BvB,EAAAsD,OAAA,yBAoBDS,EAAa,CACf1C,OACAC,QACAC,SAGI1D,EAAOQ,EAAKqC,MAAMsD,MAAMC,OAAxBpG,GA1BDmC,EAAAE,KAAA,GA4BWC,IAAM+D,IAAN,8CAAAnG,OAAwDF,GAAMkG,GA5BzE,QA4BDjE,EA5BCE,EAAAK,KA8BPnB,EAAS,CAAC3B,KAAM,iBAAkBO,QAASgC,EAAIQ,OAE/CjC,EAAKc,SAAS,CACVkC,KAAM,GACNC,MAAO,GACPC,MAAO,GACPyB,OAAQ,KAGZ3E,EAAKqC,MAAM8C,QAAQC,KAAK,KAvCjB,yBAAAzD,EAAAO,SAAAV,EAAAtB,mEA0CXkE,SAAW,SAACS,GAAD,OAAO7E,EAAKc,SAAL3B,OAAAkG,EAAA,EAAAlG,CAAA,GAAiB0F,EAAES,OAAOtC,KAAO6B,EAAES,OAAOpE,qNArDhD1B,EAAOU,KAAKmC,MAAMsD,MAAMC,OAAxBpG,YACUsC,IAAMC,IAAN,8CAAArC,OAAwDF,WAApEiC,SAEAlC,EAAUkC,EAAIQ,KACpB/B,KAAKY,SAAS,CACVkC,KAAMzD,EAAQyD,KACdC,MAAO1D,EAAQ0D,MACfC,MAAO3D,EAAQ2D,2IAgDd,IAAAJ,EAAA5C,KAAAqF,EACkCrF,KAAKlB,MAApCgE,EADHuC,EACGvC,KAAMC,EADTsC,EACStC,MAAOC,EADhBqC,EACgBrC,MAAOyB,EADvBY,EACuBZ,OAE5B,OACIxC,EAAAb,EAAAc,cAACI,EAAD,KACK,SAAAtB,GAAS,IACEL,EAAaK,EAAbL,SACR,OACIsB,EAAAb,EAAAc,cAAA,OAAKe,UAAU,aACXhB,EAAAb,EAAAc,cAAA,OAAKe,UAAU,eAAf,gBACAhB,EAAAb,EAAAc,cAAA,OAAKe,UAAU,aACXhB,EAAAb,EAAAc,cAAA,QAAMwC,SAAU9B,EAAK8B,SAASnB,KAAKX,EAAMjC,IACrCsB,EAAAb,EAAAc,cAACoD,EAAD,CACItB,MAAM,OACNlB,KAAK,OACLmB,YAAY,aACZjD,MAAO8B,EACPoB,SAAUtB,EAAKsB,SACfC,MAAOM,EAAO3B,OAElBb,EAAAb,EAAAc,cAACoD,EAAD,CACItB,MAAM,QACNlB,KAAK,QACL9D,KAAK,QACLiF,YAAY,cACZjD,MAAO+B,EACPmB,SAAUtB,EAAKsB,SACfC,MAAOM,EAAO1B,QAElBd,EAAAb,EAAAc,cAACoD,EAAD,CACItB,MAAM,QACNlB,KAAK,QACLmB,YAAY,cACZjD,MAAOgC,EACPkB,SAAUtB,EAAKsB,SACfC,MAAOM,EAAOzB,QAElBf,EAAAb,EAAAc,cAAA,SAAOlD,KAAK,SAASgC,MAAM,iBAAiBiC,UAAU,wCArGhEZ,aCDpBuD,EAAS,SAACzD,GAAS,IACb0D,EAAa1D,EAAb0D,SACR,OACI5D,EAAAb,EAAAc,cAAA,OAAKe,UAAU,4DAEXhB,EAAAb,EAAAc,cAAA,OAAKe,UAAU,aACXhB,EAAAb,EAAAc,cAAA,KAAG4D,KAAK,IAAI7C,UAAU,gBACjB4C,GAEL5D,EAAAb,EAAAc,cAAA,WACID,EAAAb,EAAAc,cAAA,MAAIe,UAAU,sBACVhB,EAAAb,EAAAc,cAAA,UACID,EAAAb,EAAAc,cAACsB,EAAA,EAAD,CAAMC,GAAG,IAAIR,UAAU,YACnBhB,EAAAb,EAAAc,cAAA,KAAGe,UAAU,gBADjB,UAIJhB,EAAAb,EAAAc,cAAA,UACID,EAAAb,EAAAc,cAACsB,EAAA,EAAD,CAAMC,GAAG,eAAeR,UAAU,YAC9BhB,EAAAb,EAAAc,cAAA,KAAGe,UAAU,gBADjB,QAIJhB,EAAAb,EAAAc,cAAA,UACID,EAAAb,EAAAc,cAACsB,EAAA,EAAD,CAAMC,GAAG,SAASR,UAAU,YACxBhB,EAAAb,EAAAc,cAAA,KAAGe,UAAU,oBADjB,eAW5B2C,EAAOrB,aAAa,CAChBsB,SAAU,UAQCD,QC5CAG,EAAA,WACX,OACI9D,EAAAb,EAAAc,cAAA,WACID,EAAAb,EAAAc,cAAA,MAAIe,UAAU,aAAd,yBACAhB,EAAAb,EAAAc,cAAA,KAAGe,UAAU,QAAb,iCACAhB,EAAAb,EAAAc,cAAA,KAAGe,UAAU,kBAAb,mBCLG+C,EAAA,WACX,OACI/D,EAAAb,EAAAc,cAAA,WACID,EAAAb,EAAAc,cAAA,MAAIe,UAAU,aAAYhB,EAAAb,EAAAc,cAAA,QAAMe,UAAU,eAAhB,OAA1B,mBACAhB,EAAAb,EAAAc,cAAA,KAAGe,UAAU,QAAb,qCCiDGgD,6MAnDXnH,MAAQ,CACJoH,MAAO,GACPC,KAAM,uFAGU,IAAAvD,EAAA5C,KAChBoG,MAAM,gDACDC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAtE,GAAI,OAAIa,EAAKhC,SAAS,CACxBsF,MAAOnE,EAAKmE,MACZC,KAAMpE,EAAKoE,0CA8Bd,IAAAvB,EACiB5E,KAAKlB,MAApBoH,EADFtB,EACEsB,MAAOC,EADTvB,EACSuB,KACd,OACIlE,EAAAb,EAAAc,cAAA,WACID,EAAAb,EAAAc,cAAA,UAAKgE,GACLjE,EAAAb,EAAAc,cAAA,SAAIiE,WA/CD9D,aCoCJmE,gMAtBX,OACEvE,EAAAb,EAAAc,cAACuE,EAAD,KACExE,EAAAb,EAAAc,cAACwE,EAAA,EAAD,CAAQC,SAAUC,mBAChB3E,EAAAb,EAAAc,cAAA,OAAKe,UAAU,OACbhB,EAAAb,EAAAc,cAAC2E,EAAD,CAAQhB,SAAS,oBACjB5D,EAAAb,EAAAc,cAAA,OAAKe,UAAU,aACdhB,EAAAb,EAAAc,cAAC4E,EAAA,EAAD,KACE7E,EAAAb,EAAAc,cAAC6E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWvD,IACjC1B,EAAAb,EAAAc,cAAC6E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,eAAeC,UAAW1C,IAC5CvC,EAAAb,EAAAc,cAAC6E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,oBAAoBC,UAAW3B,IACjDtD,EAAAb,EAAAc,cAAC6E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAWnB,IACtC9D,EAAAb,EAAAc,cAAC6E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,QAAQC,UAAWjB,IACrChE,EAAAb,EAAAc,cAAC6E,EAAA,EAAD,CAAOG,UAAWlB,gBAdf3D,cCJZ8E,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS9B,MACvB,2DAsCN,SAAS+B,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTpB,KAAK,SAAAyB,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBlJ,QACf6I,UAAUC,cAAcO,YAK1BC,QAAQC,IAAI,6CAGRX,EAAOY,UACTZ,EAAOY,SAASR,KAMlBM,QAAQC,IAAI,sCAGRX,EAAOa,WACTb,EAAOa,UAAUT,SAO5BU,MAAM,SAAArE,GACLiE,QAAQjE,MAAM,4CAA6CA,KCpFjEsE,IAASC,OAAOzG,EAAAb,EAAAc,cAACyG,EAAD,MAASC,SAASC,eAAe,SDe1C,SAAkBnB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAImB,IAAIlC,kBAAwBS,OAAOC,UAC3CyB,SAAW1B,OAAOC,SAASyB,OAIvC,OAGF1B,OAAO2B,iBAAiB,OAAQ,WAC9B,IAAMvB,EAAK,GAAAjI,OAAMoH,kBAAN,sBAEPO,GA2DV,SAAiCM,EAAOC,GAEtCtB,MAAMqB,GACHpB,KAAK,SAAAC,GAGkB,MAApBA,EAAS2C,SACuD,IAAhE3C,EAAS4C,QAAQrH,IAAI,gBAAgBsH,QAAQ,cAG7CxB,UAAUC,cAAcwB,MAAM/C,KAAK,SAAAyB,GACjCA,EAAauB,aAAahD,KAAK,WAC7BgB,OAAOC,SAASgC,aAKpB9B,EAAgBC,EAAOC,KAG1Bc,MAAM,WACLJ,QAAQC,IACN,mEA/EAkB,CAAwB9B,EAAOC,GAI/BC,UAAUC,cAAcwB,MAAM/C,KAAK,WACjC+B,QAAQC,IACN,+GAMJb,EAAgBC,EAAOC,MCtC/BE","file":"static/js/main.4b211406.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n    switch(action.type) {\n        case 'DELETE_CONTACT':\n            return {\n                ...state,\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\n            };\n        case 'ADD_CONTACT':\n            return {\n                ...state,\n                contacts: [action.payload, ...state.contacts]     \n            };\n        case 'UPDATE_CONTACT':\n            return{\n                ...state,\n                contacts: state.contacts.map(\n                    contact => \n                        contact.id === action.payload.id \n                        ? (contact = action.payload) : contact)\n            };\n        default:\n            return state;\n    }\n}\n\nexport class Provider extends Component {\n    state ={\n        contacts:[],\n        dispatch: action => this.setState(state => reducer(state, action))\n    };\n\n    async componentDidMount() {\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users');\n            \n        this.setState({contacts: res.data})\n    }\n\n    render(){\n        return(\n            <Context.Provider value={this.state}>\n            {this.props.children}\n            </Context.Provider>\n        )\n    }\n}\n\nexport const Consumer = Context.Consumer;\n\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Consumer } from '../../context';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom'\n\nclass Contact extends Component {\n    state = {\n        showContactInfo: false\n    };\n\n    onDeleteClick = async (id, dispatch) =>{\n    try {\n       await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n       dispatch({type: 'DELETE_CONTACT', payload: id});\n    } catch(e) {\n        dispatch({type: 'DELETE_CONTACT', payload: id});\n        }\n    }\n\n    render(){\n        const { id, name, email, phone } = this.props.contact;\n        const { showContactInfo} = this.state;\n\n        return(\n            <Consumer>\n                {value => {\n                    const { dispatch } = value;\n                    return (\n                        <div className=\"card card-body mb-3\">\n                            <h4>{name} <i\n                                        onClick={() => this.setState({ showContactInfo: !this.state.showContactInfo })} \n                                        className=\"fas fa-sort-down\"\n                                        style={{ cursor: 'pointer'}}\n                                        />\n                                        <i className=\"fas fa-times\"\n                                        style={{cursor: 'pointer', float: 'right',\n                                        color: 'red'}}\n                                        onClick={this.onDeleteClick.bind(this, id, dispatch)}/>\n                                        <Link to={`contact/edit/${id}`}>\n                                        <i \n                                            className=\"fas fa-pencil-alt\"\n                                            style={{\n                                                cursor: 'pointer', \n                                                float: 'right',\n                                                color: 'black',\n                                                marginRight: '1rem'\n                                            }}\n                                            >\n                                        </i>\n                                        </Link> \n                            </h4>\n                            {showContactInfo ? (<ul className=\"list-group\"> \n                                <li className=\"list-group-item\">Email: {email}</li>\n                                <li className=\"list-group-item\">Phone: {phone}</li>\n                            </ul>) : null}\n                            \n            </div>\n                    )\n                }}\n            </Consumer>\n            \n        )\n    }\n}\n\nContact.propTypes={\n    contact: PropTypes.object.isRequired\n}\n\nexport default Contact;","import React, { Component } from 'react';\nimport Contact from './Contact';\nimport { Consumer } from '../../context'\n\nclass Contacts extends Component {  \n\n    render(){\n        return(\n            <Consumer>\n            {value => {\n                const {contacts} = value;\n                return (  \n                    <React.Fragment>\n                        <h1 className=\"display-4 mb-2\">\n                            <span className=\"text-danger\">Contact </span>List\n                        </h1>\n                        {contacts.map(contact => (\n                    <Contact \n                        key={contact.id}\n                        contact={contact} \n                    />\n                ))}\n            </React.Fragment>\n                )\n            }}\n            </Consumer>\n        )\n    }\n}\n\nexport default Contacts;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n    label,\n    name,\n    value,\n    placeholder,\n    type,\n    onChange,\n    error\n}) => {\n    return (\n    <div className=\"form-group\">\n        <label htmlFor={name}>{label}</label>\n        <input \n            type={type}\n            name={name}\n            className={classnames('form-control form-control-lg', { 'is-invalid': error })} \n            placeholder={placeholder}\n            value={value}\n            onChange={onChange}\n            />\n            {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n    );\n};\n\nTextInputGroup.propTypes = {\n    label: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    placeholder: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    error: PropTypes.string\n}; \n\nTextInputGroup.defaultProps = {\n    type: 'text'\n};\n\nexport default TextInputGroup;","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup'\nimport axios from 'axios';\n\nclass AddContact extends Component {\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {}\n    };\n\n    onSubmit = async (dispatch, e) => {\n        e.preventDefault();\n        const { name, email, phone } = this.state;\n        if(name === ''){\n            this.setState({errors: { name: 'Name is required' }});\n            return;\n        }\n\n\n        if(email === ''){\n            this.setState({errors: { email: 'Email  is required' }});\n            return;\n        }\n\n\n        if(phone === ''){\n            this.setState({errors: { phone: 'Phone is required' }});\n            return;\n        }\n\n        const newContact = {\n            name,\n            email,\n            phone\n        }\n\n        const res = await axios.post(`https://jsonplaceholder.typicode.com/users`, newContact);\n        \n        dispatch({type: 'ADD_CONTACT', payload: res.data});\n        \n\n        this.setState({\n            name: '',\n            email: '',\n            phone: '',\n            errors: {}\n        });\n\n        this.props.history.push('/');\n    }\n\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value});\n    \n    render() {\n        const { name, email, phone, errors } = this.state;\n\n        return (\n            <Consumer>\n                {value => {\n                    const { dispatch } = value;\n                    return(\n                        <div className=\"card mb-3\">\n                            <div className=\"card-header\">Add Contact</div>\n                            <div className=\"card-body\">\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                                    <TextInputGroup \n                                        label=\"Name\"\n                                        name=\"name\"\n                                        placeholder=\"Enter Name\"\n                                        value={name}\n                                        onChange={this.onChange}\n                                        error={errors.name}\n                                    />\n                                    <TextInputGroup \n                                        label=\"Email\"\n                                        name=\"email\"\n                                        type=\"email\"\n                                        placeholder=\"Enter Nesto drugo\"\n                                        value={email}\n                                        onChange={this.onChange}\n                                        error={errors.email}\n                                    />\n                                    <TextInputGroup \n                                        label=\"Phone\"\n                                        name=\"phone\"\n                                        placeholder=\"Enter Phone\"\n                                        value={phone}\n                                        onChange={this.onChange}\n                                        error={errors.phone}\n                                    />\n                                    <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-light btn-block\" />\n                                </form>\n                            </div>\n            </div>\n                    )\n                }} \n            </Consumer>\n        )\n    }\n}\n\nexport default AddContact;","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup'\nimport axios from 'axios';\n\nclass EditContact extends Component {\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {}\n    };\n\n    async componentDidMount() {\n        const { id } = this.props.match.params;\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\n\n        const contact = res.data;\n        this.setState({\n            name: contact.name, \n            email: contact.email, \n            phone: contact.phone\n        });\n    }\n\n    onSubmit = async (dispatch, e) => {\n        e.preventDefault();\n        const { name, email, phone } = this.state;\n        if(name === ''){\n            this.setState({errors: { name: 'Name is required' }});\n            return;\n        }\n\n\n        if(email === ''){\n            this.setState({errors: { email: 'Email  is required' }});\n            return;\n        }\n\n\n        if(phone === ''){\n            this.setState({errors: { phone: 'Phone is required' }});\n            return;\n        }\n\n        const updContact = {\n            name,\n            email,\n            phone\n        }\n\n        const { id } = this.props.match.params;\n\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\n\n        dispatch({type: 'UPDATE_CONTACT', payload: res.data});\n\n        this.setState({\n            name: '',\n            email: '',\n            phone: '',\n            errors: {}\n        });\n\n        this.props.history.push('/');\n    }\n\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value});\n    \n    render() {\n        const { name, email, phone, errors } = this.state;\n\n        return (\n            <Consumer>\n                {value => {\n                    const { dispatch } = value;\n                    return(\n                        <div className=\"card mb-3\">\n                            <div className=\"card-header\">Edit Contact</div>\n                            <div className=\"card-body\">\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                                    <TextInputGroup \n                                        label=\"Name\"\n                                        name=\"name\"\n                                        placeholder=\"Enter Name\"\n                                        value={name}\n                                        onChange={this.onChange}\n                                        error={errors.name}\n                                    />\n                                    <TextInputGroup \n                                        label=\"Email\"\n                                        name=\"email\"\n                                        type=\"email\"\n                                        placeholder=\"Enter Email\"\n                                        value={email}\n                                        onChange={this.onChange}\n                                        error={errors.email}\n                                    />\n                                    <TextInputGroup \n                                        label=\"Phone\"\n                                        name=\"phone\"\n                                        placeholder=\"Enter Phone\"\n                                        value={phone}\n                                        onChange={this.onChange}\n                                        error={errors.phone}\n                                    />\n                                    <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-light btn-block\" />\n                                </form>\n                            </div>\n            </div>\n                    )\n                }} \n            </Consumer>\n        )\n    }\n}\n\nexport default EditContact;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Header = (props) =>{\n    const { branding } = props;\n    return(\n        <nav className=\"navbar navbar-expand-sm \n        navbar-dark bg-danger mb-3 py-0\">\n            <div className=\"container\">\n                <a href=\"/\" className=\"navbar-brand\">\n                    {branding}\n                </a>\n                <div>\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li>\n                            <Link to=\"/\" className=\"nav-link\">\n                                <i className=\"fas fa-home\" /> Home\n                            </Link>\n                        </li>\n                        <li>\n                            <Link to=\"/contact/add\" className=\"nav-link\">\n                                <i className=\"fas fa-plus\" />Add\n                            </Link>\n                        </li>\n                        <li>\n                            <Link to=\"/about\" className=\"nav-link\">\n                                <i className=\"fas fa-question\" />About\n                            </Link>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </nav>\n    );\n}\n\nHeader.defaultProps={\n    branding: 'My App'\n}\n\nHeader.propTypes= {\n    branding: PropTypes.string.isRequired\n}\n\n\nexport default Header;","import React from 'react';\n\nexport default () => {\n    return(\n        <div>\n            <h1 className=\"display-4\">About Contact Manager</h1>\n            <p className=\"lead\">Simple app to manage contacts</p>\n            <p className=\"text-secondary\">Version 1.0.0</p>\n        </div>\n    )\n}","import React from 'react';\n\nexport default () => {\n    return(\n        <div>\n            <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\n            <p className=\"lead\">Sorry, that page does not exist</p>\n        </div>\n    );\n};","import React, { Component } from 'react';\n\nclass Test extends Component {\n    \n    state = {\n        title: '',\n        body: ''\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/todos/1')\n            .then(response => response.json())\n            .then(data => this.setState({\n                title: data.title,\n                body: data.body\n            }));\n    }\n\n    // componentWillMount() {\n    //    console.log('componentWillMount');\n    // }\n\n    // componentDidUpdate() {\n    //    console.log('componentDidUpdate');\n    // }\n\n    // componentWillUpdate() {\n    //    console.log('componentWillUpdate');\n    // }\n\n    // componentWillReceiveProps(nextProps, nextState) {\n    //    console.log('componentWillReceiveProps');\n    // }\n\n    // static getDerivedStateFromProps(nextProps, prevState){\n    //    return {\n    //        test: 'something'\n    //    };\n    // }\n\n    // getSnapshotBeforeUpdate(prevProps, prevState){\n    //    console.log('getSnapshotBeforeUpdate');\n    // }\n\n    render() {\n        const {title, body} = this.state;\n        return  (\n            <div>\n                <h1>{title}</h1>\n                <p>{body}</p>        \n            </div>\n        );\n    }\n}\n\nexport default Test;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test'\nimport { Provider } from './context';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n//import { publicDecrypt } from 'crypto';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router basename={process.env.PUBLIC_URL}>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n             <Switch>\n               <Route exact path=\"/\" component={Contacts} />\n               <Route exact path=\"/contact/add\" component={AddContact} />\n               <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n               <Route exact path=\"/about\" component={About} /> \n               <Route exact path=\"/test\" component={Test} />\n               <Route component={NotFound} />               \n             </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n     );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}